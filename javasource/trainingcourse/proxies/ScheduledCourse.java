// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package trainingcourse.proxies;

public class ScheduledCourse
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject scheduledCourseMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TrainingCourse.ScheduledCourse";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		StartDate("StartDate"),
		EndDate("EndDate"),
		NrOfRegistration("NrOfRegistration"),
		ScheduledCourse_Course("TrainingCourse.ScheduledCourse_Course"),
		ScheduledCourse_Location("TrainingCourse.ScheduledCourse_Location"),
		ScheduledCourse_Trainer("TrainingCourse.ScheduledCourse_Trainer");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ScheduledCourse(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TrainingCourse.ScheduledCourse"));
	}

	protected ScheduledCourse(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject scheduledCourseMendixObject)
	{
		if (scheduledCourseMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TrainingCourse.ScheduledCourse", scheduledCourseMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TrainingCourse.ScheduledCourse");

		this.scheduledCourseMendixObject = scheduledCourseMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ScheduledCourse.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static trainingcourse.proxies.ScheduledCourse initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return trainingcourse.proxies.ScheduledCourse.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static trainingcourse.proxies.ScheduledCourse initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new trainingcourse.proxies.ScheduledCourse(context, mendixObject);
	}

	public static trainingcourse.proxies.ScheduledCourse load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return trainingcourse.proxies.ScheduledCourse.initialize(context, mendixObject);
	}

	public static java.util.List<trainingcourse.proxies.ScheduledCourse> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<trainingcourse.proxies.ScheduledCourse> result = new java.util.ArrayList<trainingcourse.proxies.ScheduledCourse>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TrainingCourse.ScheduledCourse" + xpathConstraint))
			result.add(trainingcourse.proxies.ScheduledCourse.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of StartDate
	 */
	public final java.util.Date getStartDate()
	{
		return getStartDate(getContext());
	}

	/**
	 * @param context
	 * @return value of StartDate
	 */
	public final java.util.Date getStartDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.StartDate.toString());
	}

	/**
	 * Set value of StartDate
	 * @param startdate
	 */
	public final void setStartDate(java.util.Date startdate)
	{
		setStartDate(getContext(), startdate);
	}

	/**
	 * Set value of StartDate
	 * @param context
	 * @param startdate
	 */
	public final void setStartDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date startdate)
	{
		getMendixObject().setValue(context, MemberNames.StartDate.toString(), startdate);
	}

	/**
	 * @return value of EndDate
	 */
	public final java.util.Date getEndDate()
	{
		return getEndDate(getContext());
	}

	/**
	 * @param context
	 * @return value of EndDate
	 */
	public final java.util.Date getEndDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.EndDate.toString());
	}

	/**
	 * Set value of EndDate
	 * @param enddate
	 */
	public final void setEndDate(java.util.Date enddate)
	{
		setEndDate(getContext(), enddate);
	}

	/**
	 * Set value of EndDate
	 * @param context
	 * @param enddate
	 */
	public final void setEndDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date enddate)
	{
		getMendixObject().setValue(context, MemberNames.EndDate.toString(), enddate);
	}

	/**
	 * @return value of NrOfRegistration
	 */
	public final java.lang.Integer getNrOfRegistration()
	{
		return getNrOfRegistration(getContext());
	}

	/**
	 * @param context
	 * @return value of NrOfRegistration
	 */
	public final java.lang.Integer getNrOfRegistration(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.NrOfRegistration.toString());
	}

	/**
	 * Set value of NrOfRegistration
	 * @param nrofregistration
	 */
	public final void setNrOfRegistration(java.lang.Integer nrofregistration)
	{
		setNrOfRegistration(getContext(), nrofregistration);
	}

	/**
	 * Set value of NrOfRegistration
	 * @param context
	 * @param nrofregistration
	 */
	public final void setNrOfRegistration(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer nrofregistration)
	{
		getMendixObject().setValue(context, MemberNames.NrOfRegistration.toString(), nrofregistration);
	}

	/**
	 * @return value of ScheduledCourse_Course
	 */
	public final trainingcourse.proxies.Course getScheduledCourse_Course() throws com.mendix.core.CoreException
	{
		return getScheduledCourse_Course(getContext());
	}

	/**
	 * @param context
	 * @return value of ScheduledCourse_Course
	 */
	public final trainingcourse.proxies.Course getScheduledCourse_Course(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		trainingcourse.proxies.Course result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScheduledCourse_Course.toString());
		if (identifier != null)
			result = trainingcourse.proxies.Course.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScheduledCourse_Course
	 * @param scheduledcourse_course
	 */
	public final void setScheduledCourse_Course(trainingcourse.proxies.Course scheduledcourse_course)
	{
		setScheduledCourse_Course(getContext(), scheduledcourse_course);
	}

	/**
	 * Set value of ScheduledCourse_Course
	 * @param context
	 * @param scheduledcourse_course
	 */
	public final void setScheduledCourse_Course(com.mendix.systemwideinterfaces.core.IContext context, trainingcourse.proxies.Course scheduledcourse_course)
	{
		if (scheduledcourse_course == null)
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Course.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Course.toString(), scheduledcourse_course.getMendixObject().getId());
	}

	/**
	 * @return value of ScheduledCourse_Location
	 */
	public final trainingcourse.proxies.Location getScheduledCourse_Location() throws com.mendix.core.CoreException
	{
		return getScheduledCourse_Location(getContext());
	}

	/**
	 * @param context
	 * @return value of ScheduledCourse_Location
	 */
	public final trainingcourse.proxies.Location getScheduledCourse_Location(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		trainingcourse.proxies.Location result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScheduledCourse_Location.toString());
		if (identifier != null)
			result = trainingcourse.proxies.Location.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScheduledCourse_Location
	 * @param scheduledcourse_location
	 */
	public final void setScheduledCourse_Location(trainingcourse.proxies.Location scheduledcourse_location)
	{
		setScheduledCourse_Location(getContext(), scheduledcourse_location);
	}

	/**
	 * Set value of ScheduledCourse_Location
	 * @param context
	 * @param scheduledcourse_location
	 */
	public final void setScheduledCourse_Location(com.mendix.systemwideinterfaces.core.IContext context, trainingcourse.proxies.Location scheduledcourse_location)
	{
		if (scheduledcourse_location == null)
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Location.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Location.toString(), scheduledcourse_location.getMendixObject().getId());
	}

	/**
	 * @return value of ScheduledCourse_Trainer
	 */
	public final trainingcourse.proxies.Trainer getScheduledCourse_Trainer() throws com.mendix.core.CoreException
	{
		return getScheduledCourse_Trainer(getContext());
	}

	/**
	 * @param context
	 * @return value of ScheduledCourse_Trainer
	 */
	public final trainingcourse.proxies.Trainer getScheduledCourse_Trainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		trainingcourse.proxies.Trainer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScheduledCourse_Trainer.toString());
		if (identifier != null)
			result = trainingcourse.proxies.Trainer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScheduledCourse_Trainer
	 * @param scheduledcourse_trainer
	 */
	public final void setScheduledCourse_Trainer(trainingcourse.proxies.Trainer scheduledcourse_trainer)
	{
		setScheduledCourse_Trainer(getContext(), scheduledcourse_trainer);
	}

	/**
	 * Set value of ScheduledCourse_Trainer
	 * @param context
	 * @param scheduledcourse_trainer
	 */
	public final void setScheduledCourse_Trainer(com.mendix.systemwideinterfaces.core.IContext context, trainingcourse.proxies.Trainer scheduledcourse_trainer)
	{
		if (scheduledcourse_trainer == null)
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Trainer.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScheduledCourse_Trainer.toString(), scheduledcourse_trainer.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return scheduledCourseMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final trainingcourse.proxies.ScheduledCourse that = (trainingcourse.proxies.ScheduledCourse) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TrainingCourse.ScheduledCourse";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
