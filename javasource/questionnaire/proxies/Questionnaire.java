// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnaire.proxies;

public class Questionnaire
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject questionnaireMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Questionnaire.Questionnaire";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Number("Number"),
		Title("Title"),
		Description("Description"),
		CompletionDate("CompletionDate"),
		TotalScore("TotalScore"),
		Questionnaire_QuestionnaireConfig("Questionnaire.Questionnaire_QuestionnaireConfig"),
		Questionnaire_User("Questionnaire.Questionnaire_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Questionnaire(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Questionnaire.Questionnaire"));
	}

	protected Questionnaire(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject questionnaireMendixObject)
	{
		if (questionnaireMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Questionnaire.Questionnaire", questionnaireMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Questionnaire.Questionnaire");

		this.questionnaireMendixObject = questionnaireMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Questionnaire.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnaire.proxies.Questionnaire initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnaire.proxies.Questionnaire.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnaire.proxies.Questionnaire initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnaire.proxies.Questionnaire(context, mendixObject);
	}

	public static questionnaire.proxies.Questionnaire load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnaire.proxies.Questionnaire.initialize(context, mendixObject);
	}

	public static java.util.List<questionnaire.proxies.Questionnaire> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<questionnaire.proxies.Questionnaire> result = new java.util.ArrayList<questionnaire.proxies.Questionnaire>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Questionnaire.Questionnaire" + xpathConstraint))
			result.add(questionnaire.proxies.Questionnaire.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Number
	 */
	public final java.lang.Long getNumber()
	{
		return getNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of Number
	 */
	public final java.lang.Long getNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Number.toString());
	}

	/**
	 * Set value of Number
	 * @param number
	 */
	public final void setNumber(java.lang.Long number)
	{
		setNumber(getContext(), number);
	}

	/**
	 * Set value of Number
	 * @param context
	 * @param number
	 */
	public final void setNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long number)
	{
		getMendixObject().setValue(context, MemberNames.Number.toString(), number);
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of CompletionDate
	 */
	public final java.util.Date getCompletionDate()
	{
		return getCompletionDate(getContext());
	}

	/**
	 * @param context
	 * @return value of CompletionDate
	 */
	public final java.util.Date getCompletionDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.CompletionDate.toString());
	}

	/**
	 * Set value of CompletionDate
	 * @param completiondate
	 */
	public final void setCompletionDate(java.util.Date completiondate)
	{
		setCompletionDate(getContext(), completiondate);
	}

	/**
	 * Set value of CompletionDate
	 * @param context
	 * @param completiondate
	 */
	public final void setCompletionDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date completiondate)
	{
		getMendixObject().setValue(context, MemberNames.CompletionDate.toString(), completiondate);
	}

	/**
	 * @return value of TotalScore
	 */
	public final java.lang.Integer getTotalScore()
	{
		return getTotalScore(getContext());
	}

	/**
	 * @param context
	 * @return value of TotalScore
	 */
	public final java.lang.Integer getTotalScore(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.TotalScore.toString());
	}

	/**
	 * Set value of TotalScore
	 * @param totalscore
	 */
	public final void setTotalScore(java.lang.Integer totalscore)
	{
		setTotalScore(getContext(), totalscore);
	}

	/**
	 * Set value of TotalScore
	 * @param context
	 * @param totalscore
	 */
	public final void setTotalScore(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer totalscore)
	{
		getMendixObject().setValue(context, MemberNames.TotalScore.toString(), totalscore);
	}

	/**
	 * @return value of Questionnaire_QuestionnaireConfig
	 */
	public final questionnaire.proxies.QuestionnaireConfig getQuestionnaire_QuestionnaireConfig() throws com.mendix.core.CoreException
	{
		return getQuestionnaire_QuestionnaireConfig(getContext());
	}

	/**
	 * @param context
	 * @return value of Questionnaire_QuestionnaireConfig
	 */
	public final questionnaire.proxies.QuestionnaireConfig getQuestionnaire_QuestionnaireConfig(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnaire.proxies.QuestionnaireConfig result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Questionnaire_QuestionnaireConfig.toString());
		if (identifier != null)
			result = questionnaire.proxies.QuestionnaireConfig.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Questionnaire_QuestionnaireConfig
	 * @param questionnaire_questionnaireconfig
	 */
	public final void setQuestionnaire_QuestionnaireConfig(questionnaire.proxies.QuestionnaireConfig questionnaire_questionnaireconfig)
	{
		setQuestionnaire_QuestionnaireConfig(getContext(), questionnaire_questionnaireconfig);
	}

	/**
	 * Set value of Questionnaire_QuestionnaireConfig
	 * @param context
	 * @param questionnaire_questionnaireconfig
	 */
	public final void setQuestionnaire_QuestionnaireConfig(com.mendix.systemwideinterfaces.core.IContext context, questionnaire.proxies.QuestionnaireConfig questionnaire_questionnaireconfig)
	{
		if (questionnaire_questionnaireconfig == null)
			getMendixObject().setValue(context, MemberNames.Questionnaire_QuestionnaireConfig.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Questionnaire_QuestionnaireConfig.toString(), questionnaire_questionnaireconfig.getMendixObject().getId());
	}

	/**
	 * @return value of Questionnaire_User
	 */
	public final system.proxies.User getQuestionnaire_User() throws com.mendix.core.CoreException
	{
		return getQuestionnaire_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Questionnaire_User
	 */
	public final system.proxies.User getQuestionnaire_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Questionnaire_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Questionnaire_User
	 * @param questionnaire_user
	 */
	public final void setQuestionnaire_User(system.proxies.User questionnaire_user)
	{
		setQuestionnaire_User(getContext(), questionnaire_user);
	}

	/**
	 * Set value of Questionnaire_User
	 * @param context
	 * @param questionnaire_user
	 */
	public final void setQuestionnaire_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User questionnaire_user)
	{
		if (questionnaire_user == null)
			getMendixObject().setValue(context, MemberNames.Questionnaire_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Questionnaire_User.toString(), questionnaire_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return questionnaireMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnaire.proxies.Questionnaire that = (questionnaire.proxies.Questionnaire) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Questionnaire.Questionnaire";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
