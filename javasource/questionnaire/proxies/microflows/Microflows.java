// This file was generated by Mendix Modeler 7.18.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnaire.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Questionnaire module
	public static void addDependancyConfigFromElement(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.AddDependancyConfigFromElement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addDependancyConfigFromOption(IContext context, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.AddDependancyConfigFromOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void addElementConfigBelowOther(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.AddElementConfigBelowOther", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_DateRangInputConfig_UpdateRangesToSelectedInterval(IContext context, questionnaire.proxies.DateRangeInputConfig _dateRangeInputConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateRangeInputConfig", _dateRangeInputConfig == null ? null : _dateRangeInputConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_DateRangInputConfig_UpdateRangesToSelectedInterval", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Element_UpdateDependency(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_Element_UpdateDependency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ElementConfig_UpdateSequence(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_ElementConfig_UpdateSequence", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ListInputConfig_Validate(IContext context, questionnaire.proxies.ListInputConfig _listInputConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ListInputConfig", _listInputConfig == null ? null : _listInputConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_ListInputConfig_Validate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ListOptionConfig_SetSequenceLabel(IContext context, questionnaire.proxies.ListOptionConfig _listOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ListOptionConfig", _listOptionConfig == null ? null : _listOptionConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_ListOptionConfig_SetSequenceLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_NumberRangeConfig_UpdateRangesToSelectedInterval(IContext context, questionnaire.proxies.NumberRangeInputConfig _numberRangeInputConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NumberRangeInputConfig", _numberRangeInputConfig == null ? null : _numberRangeInputConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_NumberRangeConfig_UpdateRangesToSelectedInterval", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Option_UpdateDepencency(IContext context, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_Option_UpdateDepencency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_OptionConfig_SetLabels(IContext context, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_OptionConfig_SetLabels", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_UpdatePlainTextLabel(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BCo_UpdatePlainTextLabel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bDe_Element_UpdateDependency(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BDe_Element_UpdateDependency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bDe_Option_UpdateDepencency(IContext context, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.BDe_Option_UpdateDepencency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	/**
	 * Create an XMLDocumentTemplate object and op the upload form.
	 */
	public static void btn_ImportXML_Upload(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Questionnaire.btn_ImportXML_Upload", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.PageNav buildPageNav(IContext context, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Page", _page == null ? null : _page.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.BuildPageNav", params);
			return result == null ? null : questionnaire.proxies.PageNav.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long calculateElementScore(IContext context, questionnaire.proxies.Element _element)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Element", _element == null ? null : _element.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Questionnaire.CalculateElementScore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long calculateScore(IContext context, questionnaire.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			return (java.lang.Long)Core.execute(context, "Questionnaire.CalculateScore", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void conductConfiguration(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.ConductConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyDependencyConfig(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig, questionnaire.proxies.QuestionnaireConfig _newQuestionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			params.put("NewQuestionnaireConfig", _newQuestionnaireConfig == null ? null : _newQuestionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.CopyDependencyConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyElementConfig(IContext context, questionnaire.proxies.ElementConfig _elementConfig, questionnaire.proxies.QuestionnaireConfig _newQuestionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			params.put("NewQuestionnaireConfig", _newQuestionnaireConfig == null ? null : _newQuestionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.CopyElementConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void copyOptionConfig(IContext context, questionnaire.proxies.OptionConfig _optionConfig, questionnaire.proxies.ElementConfig _newElementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			params.put("NewElementConfig", _newElementConfig == null ? null : _newElementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.CopyOptionConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.QuestionnaireConfig copyQuestionnaireConfig(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig, boolean _newSet)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			params.put("NewSet", _newSet);
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.CopyQuestionnaireConfig", params);
			return result == null ? null : questionnaire.proxies.QuestionnaireConfig.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createDependency(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig, questionnaire.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			Core.execute(context, "Questionnaire.CreateDependency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createElement(IContext context, questionnaire.proxies.Page _page, questionnaire.proxies.ElementConfig _elementConfig, java.lang.Long _displayNr)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Page", _page == null ? null : _page.getMendixObject());
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			params.put("DisplayNr", _displayNr);
			Core.execute(context, "Questionnaire.CreateElement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createElementConfigType(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.CreateElementConfigType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createNewQuestionnaireConfig(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Questionnaire.CreateNewQuestionnaireConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createOption(IContext context, questionnaire.proxies.Element _element, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Element", _element == null ? null : _element.getMendixObject());
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.CreateOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.Questionnaire createQuestionnaire(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.CreateQuestionnaire", params);
			return result == null ? null : questionnaire.proxies.Questionnaire.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteDependencyConfig(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DeleteDependencyConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteElementConfig(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DeleteElementConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteListOptionConfig(IContext context, questionnaire.proxies.ListOptionConfig _listOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ListOptionConfig", _listOptionConfig == null ? null : _listOptionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DeleteListOptionConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteQuestionnaireResult(IContext context, java.util.List<questionnaire.proxies.Questionnaire> _questionnaireList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_questionnaireList = null;
			if (_questionnaireList != null)
			{
				listparam_questionnaireList = new java.util.ArrayList<IMendixObject>();
				for (questionnaire.proxies.Questionnaire obj : _questionnaireList)
					listparam_questionnaireList.add(obj.getMendixObject());
			}
			params.put("QuestionnaireList", listparam_questionnaireList);
			Core.execute(context, "Questionnaire.DeleteQuestionnaireResult", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void deleteSurePage_Open(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DeleteSurePage_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void downloadRevisionResult(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DownloadRevisionResult", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void downloadXMLFile(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DownloadXMLFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void duplicateAsNewConfig(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DuplicateAsNewConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void duplicateAsNewConfigFromDV(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DuplicateAsNewConfigFromDV", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void duplicateAsNewRevisionConfig(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.DuplicateAsNewRevisionConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editDependencyConfigFromElement(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.EditDependencyConfigFromElement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editDependencyConfigFromOption(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig, questionnaire.proxies.OptionConfig _optionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			params.put("OptionConfig", _optionConfig == null ? null : _optionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.EditDependencyConfigFromOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void editElementConfig(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.EditElementConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void exportToPDF(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.ExportToPDF", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void findUpdateDependencies(IContext context, java.util.List<questionnaire.proxies.Option> _previousOptionList, java.util.List<questionnaire.proxies.Option> _currentOptionList, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_previousOptionList = null;
			if (_previousOptionList != null)
			{
				listparam_previousOptionList = new java.util.ArrayList<IMendixObject>();
				for (questionnaire.proxies.Option obj : _previousOptionList)
					listparam_previousOptionList.add(obj.getMendixObject());
			}
			params.put("PreviousOptionList", listparam_previousOptionList);
			java.util.ArrayList<IMendixObject> listparam_currentOptionList = null;
			if (_currentOptionList != null)
			{
				listparam_currentOptionList = new java.util.ArrayList<IMendixObject>();
				for (questionnaire.proxies.Option obj : _currentOptionList)
					listparam_currentOptionList.add(obj.getMendixObject());
			}
			params.put("CurrentOptionList", listparam_currentOptionList);
			params.put("Page", _page == null ? null : _page.getMendixObject());
			Core.execute(context, "Questionnaire.FindUpdateDependencies", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getAnswer(IContext context, java.lang.Long _elementNumber)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementNumber", _elementNumber);
			return (java.lang.String)Core.execute(context, "Questionnaire.GetAnswer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<questionnaire.proxies.QA> getQA(IContext context, questionnaire.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Questionnaire.GetQA", params);
			java.util.List<questionnaire.proxies.QA> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<questionnaire.proxies.QA>();
				for (IMendixObject obj : objs)
					result.add(questionnaire.proxies.QA.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<questionnaire.proxies.Element> getQuestions(IContext context, questionnaire.proxies.Questionnaire _questionnaire)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Questionnaire", _questionnaire == null ? null : _questionnaire.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Questionnaire.GetQuestions", params);
			java.util.List<questionnaire.proxies.Element> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<questionnaire.proxies.Element>();
				for (IMendixObject obj : objs)
					result.add(questionnaire.proxies.Element.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<questionnaire.proxies.Questionnaire> getRespondents(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "Questionnaire.GetRespondents", params);
			java.util.List<questionnaire.proxies.Questionnaire> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<questionnaire.proxies.Questionnaire>();
				for (IMendixObject obj : objs)
					result.add(questionnaire.proxies.Questionnaire.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String getRespondentUserName(IContext context, java.lang.Long _questionnaireNumber)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireNumber", _questionnaireNumber);
			return (java.lang.String)Core.execute(context, "Questionnaire.GetRespondentUserName", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void moveElementConfigDownAndUpdateDependency(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.MoveElementConfigDownAndUpdateDependency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void moveElementConfigUpAndUpdateDendency(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			Core.execute(context, "Questionnaire.MoveElementConfigUpAndUpdateDendency", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void moveListOptionConfigDown(IContext context, questionnaire.proxies.ListOptionConfig _listOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ListOptionConfig", _listOptionConfig == null ? null : _listOptionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.MoveListOptionConfigDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void moveListOptionConfigUp(IContext context, questionnaire.proxies.ListOptionConfig _listOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ListOptionConfig", _listOptionConfig == null ? null : _listOptionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.MoveListOptionConfigUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean newImage(IContext context, questionnaire.proxies.ElementConfig _elementConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.NewImage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void nextPage(IContext context, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Page", _page == null ? null : _page.getMendixObject());
			Core.execute(context, "Questionnaire.NextPage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void previousPage(IContext context, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Page", _page == null ? null : _page.getMendixObject());
			Core.execute(context, "Questionnaire.PreviousPage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void publishQuestionnaireConfig(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.PublishQuestionnaireConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void publishQuestionnaireConfigFromDV(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.PublishQuestionnaireConfigFromDV", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void publishQuestionnaireConfigFromOverview(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.PublishQuestionnaireConfigFromOverview", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void questionnaireConfig_Delete(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.QuestionnaireConfig_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.XMLDocumentTemplate questionnaireConfig_ExportToXML(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.QuestionnaireConfig_ExportToXML", params);
			return result == null ? null : questionnaire.proxies.XMLDocumentTemplate.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void questionnaireConfig_ImportFromXml(IContext context, questionnaire.proxies.XMLDocumentTemplate _xMLDocumentTemplate)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("XMLDocumentTemplate", _xMLDocumentTemplate == null ? null : _xMLDocumentTemplate.getMendixObject());
			Core.execute(context, "Questionnaire.QuestionnaireConfig_ImportFromXml", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void questionnaireConfig_NewEdit_Open(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.QuestionnaireConfig_NewEdit_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean questionnaireConfig_SetPublishedFalse(IContext context, boolean _published)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Published", _published);
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.QuestionnaireConfig_SetPublishedFalse", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long questionnaireConfig_SetVersionNbr1(IContext context, java.lang.Long _parameter_1)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Parameter_1", _parameter_1);
			return (java.lang.Long)Core.execute(context, "Questionnaire.QuestionnaireConfig_SetVersionNbr1", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void revokePublicationQuestionnaireConfig(IContext context, questionnaire.proxies.QuestionnaireConfig _questionnaireConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QuestionnaireConfig", _questionnaireConfig == null ? null : _questionnaireConfig.getMendixObject());
			Core.execute(context, "Questionnaire.RevokePublicationQuestionnaireConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveDependencyConfig(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			Core.execute(context, "Questionnaire.SaveDependencyConfig", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveElement(IContext context, questionnaire.proxies.Element _element)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Element", _element == null ? null : _element.getMendixObject());
			Core.execute(context, "Questionnaire.SaveElement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void saveValidateFixDateOverlap(IContext context, questionnaire.proxies.DateOptionConfig _dateOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateOptionConfig", _dateOptionConfig == null ? null : _dateOptionConfig.getMendixObject());
			Core.execute(context, "Questionnaire.SaveValidateFixDateOverlap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Long sUB_CheckCorrectAnswerMultiOption(IContext context, questionnaire.proxies.ElementConfig _elementConfig, java.util.List<questionnaire.proxies.Option> _optionList, java.util.List<questionnaire.proxies.ListOptionConfig> _correctListOptionConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ElementConfig", _elementConfig == null ? null : _elementConfig.getMendixObject());
			java.util.ArrayList<IMendixObject> listparam_optionList = null;
			if (_optionList != null)
			{
				listparam_optionList = new java.util.ArrayList<IMendixObject>();
				for (questionnaire.proxies.Option obj : _optionList)
					listparam_optionList.add(obj.getMendixObject());
			}
			params.put("OptionList", listparam_optionList);
			java.util.ArrayList<IMendixObject> listparam_correctListOptionConfig = null;
			if (_correctListOptionConfig != null)
			{
				listparam_correctListOptionConfig = new java.util.ArrayList<IMendixObject>();
				for (questionnaire.proxies.ListOptionConfig obj : _correctListOptionConfig)
					listparam_correctListOptionConfig.add(obj.getMendixObject());
			}
			params.put("CorrectListOptionConfig", listparam_correctListOptionConfig);
			return (java.lang.Long)Core.execute(context, "Questionnaire.SUB_CheckCorrectAnswerMultiOption", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void submitQuestionnaire(IContext context, questionnaire.proxies.Page _currentPage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentPage", _currentPage == null ? null : _currentPage.getMendixObject());
			Core.execute(context, "Questionnaire.SubmitQuestionnaire", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateDendencyExpression(IContext context, questionnaire.proxies.DependencyConfig _dependencyConfig)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DependencyConfig", _dependencyConfig == null ? null : _dependencyConfig.getMendixObject());
			Core.execute(context, "Questionnaire.UpdateDendencyExpression", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateDependenciesAddedOptions(IContext context, questionnaire.proxies.Dependency _dependency, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Dependency", _dependency == null ? null : _dependency.getMendixObject());
			params.put("Page", _page == null ? null : _page.getMendixObject());
			Core.execute(context, "Questionnaire.UpdateDependenciesAddedOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateDependenciesRemovedOptions(IContext context, questionnaire.proxies.Dependency _dependency, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Dependency", _dependency == null ? null : _dependency.getMendixObject());
			params.put("Page", _page == null ? null : _page.getMendixObject());
			Core.execute(context, "Questionnaire.UpdateDependenciesRemovedOptions", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.Option validateDateRange(IContext context, questionnaire.proxies.DateRangeInput _dateRangeInput)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("DateRangeInput", _dateRangeInput == null ? null : _dateRangeInput.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.ValidateDateRange", params);
			return result == null ? null : questionnaire.proxies.Option.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void validateElement(IContext context, questionnaire.proxies.Element _element)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Element", _element == null ? null : _element.getMendixObject());
			Core.execute(context, "Questionnaire.ValidateElement", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static questionnaire.proxies.Option validateNumberRange(IContext context, questionnaire.proxies.NumberRangeInput _numberRangeInput, java.lang.Double _amount)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("NumberRangeInput", _numberRangeInput == null ? null : _numberRangeInput.getMendixObject());
			params.put("Amount", _amount);
			IMendixObject result = (IMendixObject)Core.execute(context, "Questionnaire.ValidateNumberRange", params);
			return result == null ? null : questionnaire.proxies.Option.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean validatePage(IContext context, questionnaire.proxies.Page _page)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Page", _page == null ? null : _page.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Questionnaire.ValidatePage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}