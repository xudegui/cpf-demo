// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package questionnaire.proxies;

public class Page
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject pageMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Questionnaire.Page";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Sequence("Sequence"),
		PageType("PageType"),
		Page_Questionnaire("Questionnaire.Page_Questionnaire");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Page(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Questionnaire.Page"));
	}

	protected Page(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject pageMendixObject)
	{
		if (pageMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Questionnaire.Page", pageMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Questionnaire.Page");

		this.pageMendixObject = pageMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Page.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static questionnaire.proxies.Page initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return questionnaire.proxies.Page.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static questionnaire.proxies.Page initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new questionnaire.proxies.Page(context, mendixObject);
	}

	public static questionnaire.proxies.Page load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return questionnaire.proxies.Page.initialize(context, mendixObject);
	}

	public static java.util.List<questionnaire.proxies.Page> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<questionnaire.proxies.Page> result = new java.util.ArrayList<questionnaire.proxies.Page>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Questionnaire.Page" + xpathConstraint))
			result.add(questionnaire.proxies.Page.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Sequence
	 */
	public final java.lang.Integer getSequence()
	{
		return getSequence(getContext());
	}

	/**
	 * @param context
	 * @return value of Sequence
	 */
	public final java.lang.Integer getSequence(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Sequence.toString());
	}

	/**
	 * Set value of Sequence
	 * @param sequence
	 */
	public final void setSequence(java.lang.Integer sequence)
	{
		setSequence(getContext(), sequence);
	}

	/**
	 * Set value of Sequence
	 * @param context
	 * @param sequence
	 */
	public final void setSequence(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sequence)
	{
		getMendixObject().setValue(context, MemberNames.Sequence.toString(), sequence);
	}

	/**
	 * Set value of PageType
	 * @param pagetype
	 */
	public final questionnaire.proxies.PageType getPageType()
	{
		return getPageType(getContext());
	}

	/**
	 * @param context
	 * @return value of PageType
	 */
	public final questionnaire.proxies.PageType getPageType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PageType.toString());
		if (obj == null)
			return null;

		return questionnaire.proxies.PageType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PageType
	 * @param pagetype
	 */
	public final void setPageType(questionnaire.proxies.PageType pagetype)
	{
		setPageType(getContext(), pagetype);
	}

	/**
	 * Set value of PageType
	 * @param context
	 * @param pagetype
	 */
	public final void setPageType(com.mendix.systemwideinterfaces.core.IContext context, questionnaire.proxies.PageType pagetype)
	{
		if (pagetype != null)
			getMendixObject().setValue(context, MemberNames.PageType.toString(), pagetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.PageType.toString(), null);
	}

	/**
	 * @return value of Page_Questionnaire
	 */
	public final questionnaire.proxies.Questionnaire getPage_Questionnaire() throws com.mendix.core.CoreException
	{
		return getPage_Questionnaire(getContext());
	}

	/**
	 * @param context
	 * @return value of Page_Questionnaire
	 */
	public final questionnaire.proxies.Questionnaire getPage_Questionnaire(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		questionnaire.proxies.Questionnaire result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Page_Questionnaire.toString());
		if (identifier != null)
			result = questionnaire.proxies.Questionnaire.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Page_Questionnaire
	 * @param page_questionnaire
	 */
	public final void setPage_Questionnaire(questionnaire.proxies.Questionnaire page_questionnaire)
	{
		setPage_Questionnaire(getContext(), page_questionnaire);
	}

	/**
	 * Set value of Page_Questionnaire
	 * @param context
	 * @param page_questionnaire
	 */
	public final void setPage_Questionnaire(com.mendix.systemwideinterfaces.core.IContext context, questionnaire.proxies.Questionnaire page_questionnaire)
	{
		if (page_questionnaire == null)
			getMendixObject().setValue(context, MemberNames.Page_Questionnaire.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Page_Questionnaire.toString(), page_questionnaire.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return pageMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final questionnaire.proxies.Page that = (questionnaire.proxies.Page) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Questionnaire.Page";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
