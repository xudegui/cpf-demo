// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package sapodataconnector.actions;

import java.util.ArrayList;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import sapodataconnector.proxies.constants.Constants;
import sapodataconnector.utils.JsonSerializer;
import sapodataconnector.utils.HttpRequest;
import sapodataconnector.utils.ToMendixSerializer;

public class ExecuteCollection extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String url;
	private sapodataconnector.proxies.HttpMethod httpMethod;
	private IMendixObject __functionParameters;
	private sapodataconnector.proxies.FunctionParameters functionParameters;
	private IMendixObject __requestParameters;
	private sapodataconnector.proxies.RequestParams requestParameters;
	private java.lang.String responseType;
	private java.lang.Boolean useSAPCloudConnector;

	public ExecuteCollection(IContext context, java.lang.String url, java.lang.String httpMethod, IMendixObject functionParameters, IMendixObject requestParameters, java.lang.String responseType, java.lang.Boolean useSAPCloudConnector)
	{
		super(context);
		this.url = url;
		this.httpMethod = httpMethod == null ? null : sapodataconnector.proxies.HttpMethod.valueOf(httpMethod);
		this.__functionParameters = functionParameters;
		this.__requestParameters = requestParameters;
		this.responseType = responseType;
		this.useSAPCloudConnector = useSAPCloudConnector;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.functionParameters = __functionParameters == null ? null : sapodataconnector.proxies.FunctionParameters.initialize(getContext(), __functionParameters);

		this.requestParameters = __requestParameters == null ? null : sapodataconnector.proxies.RequestParams.initialize(getContext(), __requestParameters);

		// BEGIN USER CODE
		if(LOGGER.isDebugEnabled()) {
			LOGGER.debug(new StringBuilder(getContext().getSession().getId().toString())
					.append("|")
					.append(httpMethod)
					.append("|ExecuteCollection, url: ")
					.append(url)
					.toString());
		}

		String bodyContent = null;
		String parameterizedUrl = url;
		if (httpMethod.equals(sapodataconnector.proxies.HttpMethod.POST)
				&& (functionParameters != null && !functionParameters.getpostParameterInline())) {
			bodyContent = JsonSerializer.writeMendixObjectToJson(getContext(), __functionParameters, false).toString();
		} else {
			parameterizedUrl = HttpRequest.setGetParameters(getContext(), url, functionParameters);
		}

		HttpRequest getSingleCall = new HttpRequest(getContext(), parameterizedUrl, httpMethod.name(), bodyContent, __requestParameters, useSAPCloudConnector);
		String response = getSingleCall.executeAction();

		final List<IMendixObject> resultList = new ArrayList<>();
		ToMendixSerializer.createNewMendixObjectList(getContext(), responseType, resultList, null, null, response);

		return resultList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "ExecuteCollection";
	}

	// BEGIN EXTRA CODE
	private static final ILogNode LOGGER = Core.getLogger(Constants.getLogNode());
	// END EXTRA CODE
}
