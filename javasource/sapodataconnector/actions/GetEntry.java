// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package sapodataconnector.actions;

import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.MendixException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONObject;
import com.mendix.webui.CustomJavaAction;
import sapodataconnector.proxies.OdataObject;
import sapodataconnector.proxies.constants.Constants;
import sapodataconnector.utils.ODataClientBuilder;
import sapodataconnector.utils.ODataRequestBuilder;
import sapodataconnector.utils.ODataResponseHandler;
import sapodataconnector.utils.ODataTypeChecker;
import sapodataconnector.utils.ToMendixSerializer;

public class GetEntry extends CustomJavaAction<IMendixObject>
{
	private java.lang.String url;
	private java.lang.String responseType;
	private IMendixObject __requestParameters;
	private sapodataconnector.proxies.RequestParams requestParameters;
	private java.lang.Boolean useSAPCloudConnector;

	public GetEntry(IContext context, java.lang.String url, java.lang.String responseType, IMendixObject requestParameters, java.lang.Boolean useSAPCloudConnector)
	{
		super(context);
		this.url = url;
		this.responseType = responseType;
		this.__requestParameters = requestParameters;
		this.useSAPCloudConnector = useSAPCloudConnector;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.requestParameters = __requestParameters == null ? null : sapodataconnector.proxies.RequestParams.initialize(getContext(), __requestParameters);

		// BEGIN USER CODE
		if(LOGGER.isDebugEnabled()) {
			LOGGER.debug(new StringBuilder(getContext().getSession().getId().toString())
					.append("|GET|single, query: ")
					.append(url)
					.toString());
		}



		ODataTypeChecker.checkDescendantOf(Core.getMetaObject(responseType), OdataObject.entityName);

		final HttpGet httpGet = ODataRequestBuilder.builder()
				.get(url)
				.setContext(getContext())
				.setReqeuestHeader(requestParameters)
				.fetchCSRFToken()
				.build();

		String response = null;
		try (final CloseableHttpClient httpClient = ODataClientBuilder.builder()
				.setContext(getContext())
				.setRequestParameters(requestParameters)
				.useCloudConnector(this.useSAPCloudConnector)
				.build()){

			response = httpClient.execute(httpGet, new ODataResponseHandler("GET", LOGGER, getContext()));
		}

		if (response == null) {
			throw new MendixException("This call has not been performed correctly, please make sure that this action is supported by the service provider.");
		}

		final JSONObject jsonObjArray = new JSONObject(response).getJSONObject("d");
		if (jsonObjArray == null) {
			throw new MendixException("Expecting exactly one result, got nothing");
		}

		final IMendixObject target = Core.instantiate(getContext(), responseType);
		ToMendixSerializer.updateMendixObject(getContext(), jsonObjArray, target);

		return target;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "GetEntry";
	}

	// BEGIN EXTRA CODE
	private static final ILogNode LOGGER = Core.getLogger(Constants.getLogNode());
	// END EXTRA CODE
}
