// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sapodataconnector.proxies;

public class Cookie
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject cookieMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SAPODataConnector.Cookie";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		domain("domain"),
		name("name"),
		path("path"),
		expiryDate("expiryDate"),
		ports("ports"),
		value("value"),
		isSecure("isSecure"),
		isPersistent("isPersistent"),
		version("version"),
		Cookie_Session("SAPODataConnector.Cookie_Session");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Cookie(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SAPODataConnector.Cookie"));
	}

	protected Cookie(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject cookieMendixObject)
	{
		if (cookieMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SAPODataConnector.Cookie", cookieMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SAPODataConnector.Cookie");

		this.cookieMendixObject = cookieMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Cookie.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static sapodataconnector.proxies.Cookie initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sapodataconnector.proxies.Cookie.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sapodataconnector.proxies.Cookie initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sapodataconnector.proxies.Cookie(context, mendixObject);
	}

	public static sapodataconnector.proxies.Cookie load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sapodataconnector.proxies.Cookie.initialize(context, mendixObject);
	}

	public static java.util.List<sapodataconnector.proxies.Cookie> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sapodataconnector.proxies.Cookie> result = new java.util.ArrayList<sapodataconnector.proxies.Cookie>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SAPODataConnector.Cookie" + xpathConstraint))
			result.add(sapodataconnector.proxies.Cookie.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of domain
	 */
	public final java.lang.String getdomain()
	{
		return getdomain(getContext());
	}

	/**
	 * @param context
	 * @return value of domain
	 */
	public final java.lang.String getdomain(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.domain.toString());
	}

	/**
	 * Set value of domain
	 * @param domain
	 */
	public final void setdomain(java.lang.String domain)
	{
		setdomain(getContext(), domain);
	}

	/**
	 * Set value of domain
	 * @param context
	 * @param domain
	 */
	public final void setdomain(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String domain)
	{
		getMendixObject().setValue(context, MemberNames.domain.toString(), domain);
	}

	/**
	 * @return value of name
	 */
	public final java.lang.String getname()
	{
		return getname(getContext());
	}

	/**
	 * @param context
	 * @return value of name
	 */
	public final java.lang.String getname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.name.toString());
	}

	/**
	 * Set value of name
	 * @param name
	 */
	public final void setname(java.lang.String name)
	{
		setname(getContext(), name);
	}

	/**
	 * Set value of name
	 * @param context
	 * @param name
	 */
	public final void setname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.name.toString(), name);
	}

	/**
	 * @return value of path
	 */
	public final java.lang.String getpath()
	{
		return getpath(getContext());
	}

	/**
	 * @param context
	 * @return value of path
	 */
	public final java.lang.String getpath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.path.toString());
	}

	/**
	 * Set value of path
	 * @param path
	 */
	public final void setpath(java.lang.String path)
	{
		setpath(getContext(), path);
	}

	/**
	 * Set value of path
	 * @param context
	 * @param path
	 */
	public final void setpath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String path)
	{
		getMendixObject().setValue(context, MemberNames.path.toString(), path);
	}

	/**
	 * @return value of expiryDate
	 */
	public final java.util.Date getexpiryDate()
	{
		return getexpiryDate(getContext());
	}

	/**
	 * @param context
	 * @return value of expiryDate
	 */
	public final java.util.Date getexpiryDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.expiryDate.toString());
	}

	/**
	 * Set value of expiryDate
	 * @param expirydate
	 */
	public final void setexpiryDate(java.util.Date expirydate)
	{
		setexpiryDate(getContext(), expirydate);
	}

	/**
	 * Set value of expiryDate
	 * @param context
	 * @param expirydate
	 */
	public final void setexpiryDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date expirydate)
	{
		getMendixObject().setValue(context, MemberNames.expiryDate.toString(), expirydate);
	}

	/**
	 * @return value of ports
	 */
	public final java.lang.String getports()
	{
		return getports(getContext());
	}

	/**
	 * @param context
	 * @return value of ports
	 */
	public final java.lang.String getports(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ports.toString());
	}

	/**
	 * Set value of ports
	 * @param ports
	 */
	public final void setports(java.lang.String ports)
	{
		setports(getContext(), ports);
	}

	/**
	 * Set value of ports
	 * @param context
	 * @param ports
	 */
	public final void setports(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String ports)
	{
		getMendixObject().setValue(context, MemberNames.ports.toString(), ports);
	}

	/**
	 * @return value of value
	 */
	public final java.lang.String getvalue()
	{
		return getvalue(getContext());
	}

	/**
	 * @param context
	 * @return value of value
	 */
	public final java.lang.String getvalue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.value.toString());
	}

	/**
	 * Set value of value
	 * @param value
	 */
	public final void setvalue(java.lang.String value)
	{
		setvalue(getContext(), value);
	}

	/**
	 * Set value of value
	 * @param context
	 * @param value
	 */
	public final void setvalue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String value)
	{
		getMendixObject().setValue(context, MemberNames.value.toString(), value);
	}

	/**
	 * @return value of isSecure
	 */
	public final java.lang.Boolean getisSecure()
	{
		return getisSecure(getContext());
	}

	/**
	 * @param context
	 * @return value of isSecure
	 */
	public final java.lang.Boolean getisSecure(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isSecure.toString());
	}

	/**
	 * Set value of isSecure
	 * @param issecure
	 */
	public final void setisSecure(java.lang.Boolean issecure)
	{
		setisSecure(getContext(), issecure);
	}

	/**
	 * Set value of isSecure
	 * @param context
	 * @param issecure
	 */
	public final void setisSecure(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean issecure)
	{
		getMendixObject().setValue(context, MemberNames.isSecure.toString(), issecure);
	}

	/**
	 * @return value of isPersistent
	 */
	public final java.lang.Boolean getisPersistent()
	{
		return getisPersistent(getContext());
	}

	/**
	 * @param context
	 * @return value of isPersistent
	 */
	public final java.lang.Boolean getisPersistent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isPersistent.toString());
	}

	/**
	 * Set value of isPersistent
	 * @param ispersistent
	 */
	public final void setisPersistent(java.lang.Boolean ispersistent)
	{
		setisPersistent(getContext(), ispersistent);
	}

	/**
	 * Set value of isPersistent
	 * @param context
	 * @param ispersistent
	 */
	public final void setisPersistent(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ispersistent)
	{
		getMendixObject().setValue(context, MemberNames.isPersistent.toString(), ispersistent);
	}

	/**
	 * @return value of version
	 */
	public final java.lang.Integer getversion()
	{
		return getversion(getContext());
	}

	/**
	 * @param context
	 * @return value of version
	 */
	public final java.lang.Integer getversion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.version.toString());
	}

	/**
	 * Set value of version
	 * @param version
	 */
	public final void setversion(java.lang.Integer version)
	{
		setversion(getContext(), version);
	}

	/**
	 * Set value of version
	 * @param context
	 * @param version
	 */
	public final void setversion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer version)
	{
		getMendixObject().setValue(context, MemberNames.version.toString(), version);
	}

	/**
	 * @return value of Cookie_Session
	 */
	public final system.proxies.Session getCookie_Session() throws com.mendix.core.CoreException
	{
		return getCookie_Session(getContext());
	}

	/**
	 * @param context
	 * @return value of Cookie_Session
	 */
	public final system.proxies.Session getCookie_Session(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Session result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Cookie_Session.toString());
		if (identifier != null)
			result = system.proxies.Session.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Cookie_Session
	 * @param cookie_session
	 */
	public final void setCookie_Session(system.proxies.Session cookie_session)
	{
		setCookie_Session(getContext(), cookie_session);
	}

	/**
	 * Set value of Cookie_Session
	 * @param context
	 * @param cookie_session
	 */
	public final void setCookie_Session(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Session cookie_session)
	{
		if (cookie_session == null)
			getMendixObject().setValue(context, MemberNames.Cookie_Session.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Cookie_Session.toString(), cookie_session.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return cookieMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sapodataconnector.proxies.Cookie that = (sapodataconnector.proxies.Cookie) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SAPODataConnector.Cookie";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
